{%- assign _varietyPack = false -%}
{%- if product.tags contains 'variety-pack' -%}{%- assign _varietyPack = true -%}{%- endif -%}

<section id="MainProduct-{{ section.id }}" class="page-width Product section-{{ section.id }}-padding" data-section="{{ section.id }}">
  {{ 'section-main-product.css' | asset_url | stylesheet_tag }}
  {{ 'component-accordion.css' | asset_url | stylesheet_tag }}
  {{ 'component-price.css' | asset_url | stylesheet_tag }}
  {{ 'component-rte.css' | asset_url | stylesheet_tag }}
  {{ 'component-slider.css' | asset_url | stylesheet_tag }}
  {{ 'component-rating.css' | asset_url | stylesheet_tag }}
  {{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
  {{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}

  {%- style -%}
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }

    @media screen and (min-width: 750px) {
      .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
      }
    }
  {%- endstyle -%}

  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>

  {%- assign first_3d_model = product.media | where: "media_type", "model" | first -%}
  {%- if first_3d_model -%}
    {{ 'component-product-model.css' | asset_url | stylesheet_tag }}
    <link id="ModelViewerStyle" rel="stylesheet" href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css" media="print" onload="this.media='all'">
    <link id="ModelViewerOverride" rel="stylesheet" href="{{ 'component-model-viewer-ui.css' | asset_url }}" media="print" onload="this.media='all'">
  {%- endif -%}
  
  <div class="vegnew-title">
    {% comment %}<h1>welcome {%- render 'vegnew-title-svg' -%} readers</h1>{% endcomment %}
    <h1>welcome <img src="https://cdn.shopify.com/s/files/1/0024/2483/2109/files/veg-new.png?v=1657617575" alt="VegNew"> readers</h1>
  </div>

  <div class="Product__Wrapper">
    <div class="Product__Gallery Product__Gallery--withThumbnails">
      <media-gallery id="MediaGallery-{{ section.id }}" role="region" {% if section.settings.enable_sticky_info %}class="product__media-gallery"{% endif %} aria-label="{{ 'products.product.media.gallery_viewer' | t }}">
        <div id="GalleryStatus-{{ section.id }}" class="visually-hidden" role="status"></div>
        <slider-component id="GalleryViewer-{{ section.id }}" class="slider-mobile-gutter">
          <a class="skip-to-content-link button visually-hidden quick-add-hidden" href="#ProductInfo-{{ section.id }}">
            {{ "accessibility.skip_to_product_info" | t }}
          </a>
          
          {% if product.metafields.Moku.LabelImage != blank %}
            <div class="pro-img-tag">
              {{product.metafields.Moku.LabelImage}}
              <div class="pro-img-shap">
                {% render 'pro-img-shape' %}
              </div>
            </div>
          {% endif %}

          <div class="pack-deal-tag">
            <span class="deal-text">3-Pack deal</span>
            <span class="deal-price">{{product.price|money}}</span>
          </div>
          
          {%- if section.settings.mian_certi_icon_1 != blank or section.settings.mian_certi_icon_2 != blank or section.settings.mian_certi_icon_3 != blank  -%}
            <div class="certificate-icon-new certificate-icon-left">
              <div class="certificate-icon-row">
                {% for i in (1..3) %}
                  {% capture cn_icon %}mian_certi_icon_{{i}}{% endcapture %}
                  {% capture cn_title %}mian_certi_icon_title_{{i}}{% endcapture %}
                  {% assign certi_new_icon = section.settings[cn_icon] %}
                  {% assign certi_new_icon_title = section.settings[cn_title] %}
                  {% if certi_new_icon != blank %}
                    <div class="certificate-icon-box">
                      {{certi_new_icon}}
                      {%- if certi_new_icon_title != blank -%} <p>{{ certi_new_icon_title | escape | capitalize }}</p>{%- endif -%}
                    </div>
                  {% endif %}
                {% endfor %}
              </div>
            </div>
          {%- endif -%}
          
          <ul id="Slider-Gallery-{{ section.id }}" class="Product_Slideshow" role="list">
            {%- liquid
              if section.settings.media_size == 'large'
                assign media_width = 0.65
              elsif section.settings.media_size == 'medium'
                assign media_width = 0.55
              elsif section.settings.media_size == 'small'
                assign media_width = 0.45
              endif
            -%}
            {%- if product.selected_or_first_available_variant.featured_media != null -%}
              {%- assign featured_media = product.selected_or_first_available_variant.featured_media -%}
              <li id="Slide-{{ section.id }}-{{ featured_media.id }}" class="product__media-item slider__slide is-active{% if featured_media.media_type != 'image' %} product__media-item--full{% endif %}" data-media-id="{{ section.id }}-{{ featured_media.id }}">
                {%- assign media_position = 1 -%}
                {% render 'product-thumbnail', media: featured_media, position: media_position, loop: section.settings.enable_video_looping, modal_id: section.id, xr_button: true, media_width: media_width, lazy_load: false %}
              </li>
            {%- endif -%}
            {%- for media in product.media -%}
              {%- unless media.id == product.selected_or_first_available_variant.featured_media.id -%}
                <li id="Slide-{{ section.id }}-{{ media.id }}" class="product__media-item slider__slide{% if product.selected_or_first_available_variant.featured_media == null and forloop.index == 1 %} is-active{% endif %}{% if media.media_type != 'image' %} product__media-item--full{% endif %}" data-media-id="{{ section.id }}-{{ media.id }}">
                  {%- assign media_position = media_position | default: 0 | plus: 1 -%}
                  {% render 'product-thumbnail', media: media, position: media_position, loop: section.settings.enable_video_looping, modal_id: section.id, xr_button: true, media_width: media_width, lazy_load: true %}
                </li>
              {%- endunless -%}
            {%- endfor -%}
          </ul>
        </slider-component>
        {%- if first_3d_model -%}
          <button
            class="button button--full-width product__xr-button"
            type="button"
            aria-label="{{ 'products.product.xr_button_label' | t }}"
            data-shopify-xr
            data-shopify-model3d-id="{{ first_3d_model.id }}"
            data-shopify-title="{{ product.title | escape }}"
            data-shopify-xr-hidden
          >
            {% render 'icon-3d-model' %}
            {{ 'products.product.xr_button' | t }}
          </button>
        {%- endif -%}
    
        <div class="Product__SlideshowNav Product__SlideshowNav--thumbnails">
            <ul id="Slider-Thumbnails-{{ section.id }}" class="Product__SlideshowNavScroller">
              {%- for media in product.media -%}
                  {%- liquid
                    capture media_index
                      if media.media_type == 'model'
                        increment model_index
                      elsif media.media_type == 'video' or media.media_type == 'external_video'
                        increment video_index
                      elsif media.media_type == 'image'
                        increment image_index
                      endif
                    endcapture
                    assign media_index = media_index | plus: 1
                  -%}
                   <li id="Slide-Thumbnails-{{ section.id }}-{{ forloop.index }}" class="Product_SlideshowNavImage AspectRatio" data-media-position="{{ media_index }}">
                    {%- if media.media_type == 'model' -%}
                      <span class="thumbnail__badge" aria-hidden="true">
                        {%- render 'icon-3d-model' -%}
                      </span>
                    {%- elsif media.media_type == 'video' or media.media_type == 'external_video' -%}
                      <span class="thumbnail__badge" aria-hidden="true">
                        {%- render 'icon-play' -%}
                      </span>
                    {%- endif -%}
                    <div class="img-box">
                      <img id="Thumbnail-{{ section.id }}-{{ forloop.index }}"
                        srcset="{% if media.preview_image.width >= 59 %}{{ media.preview_image | image_url: width: 59 }} 59x,{% endif %}
                                {% if media.preview_image.width >= 118 %}{{ media.preview_image | image_url: width: 118 }} 118w,{% endif %}
                                {% if media.preview_image.width >= 84 %}{{ media.preview_image | image_url: width: 84 }} 84w,{% endif %}
                                {% if media.preview_image.width >= 168 %}{{ media.preview_image | image_url: width: 168 }} 168w,{% endif %}
                                {% if media.preview_image.width >= 130 %}{{ media.preview_image | image_url: width: 130 }} 130w,{% endif %}
                                {% if media.preview_image.width >= 260 %}{{ media.preview_image | image_url: width: 260 }} 260w{% endif %}"
                        src="{{ media | image_url: width: 84, height: 84 }}"
                        sizes="(min-width: 1200px) calc((1200px - 19.5rem) / 12), (min-width: 750px) calc((100vw - 16.5rem) / 8), calc((100vw - 8rem) / 5)"
                        alt="{{ media.alt | escape }}"
                        height="200"
                        width="200"
                        loading="lazy"
                      >
                    </div>
                  </li>
              {%- endfor -%}
            </ul>
          </div>
        
      </media-gallery>
    </div>
    <div class="Product__InfoWrapper{% if settings.page_width > 1400 and section.settings.media_size == "small" %} product__info-wrapper--extra-padding{% endif %}">
      <div id="ProductInfo-{{ section.id }}" class="Product__Info product__info-container{% if section.settings.enable_sticky_info %} product__info-container--sticky{% endif %}">
        {%- assign product_form_id = 'product-form-' | append: section.id -%}

        {%- for block in section.blocks -%}
          {%- case block.type -%}
          {%- when '@app' -%}
            {% render block %}
          {%- when 'text' -%}
            <p class="product__text{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}" {{ block.shopify_attributes }}>
              {{- block.settings.text -}}
            </p>
          {%- when 'title' -%}
            <div class="review-and-title">
              <div class="review-wrapper">
                {% render 'junip-product-summary', product: product %}
                <a href="#" class="write-review-btn">Write a review</a>
              </div>
              <h1 class="ProductMeta__Title">{{- product.title -}}</h1>
            </div>
          {%- when 'price' -%}
          <div class="price-and-review">
            <div class="no-js-hidden" id="price-{{ section.id }}" role="status" {{ block.shopify_attributes }}>
              {% comment %}{%- render 'price-new', product: product, use_variant: true, show_badges: true, price_class: 'price--large' -%}{% endcomment %}
              {%- render 'price-vegnew', product: product, use_variant: true, show_badges: true, price_class: 'price--large' -%}
            </div>
            {% comment %}
            <div class="small-hide">
              {% render 'junip-product-summary', product: product %}
            </div>
            {% endcomment %}
          </div>
            {% comment %}
              <div {{ block.shopify_attributes }}>
                {%- assign product_form_installment_id = 'product-form-installment-' | append: section.id -%}
                {%- form 'product', product, id: product_form_installment_id, class: 'installment caption-large' -%}
                  <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                  {{ form | payment_terms }}
                {%- endform -%}
              </div>
            {% endcomment %}
          {%- when 'description' -%}
            {%- if product.description != blank -%}
              <div class="ProductMeta__Description">
                <div class="Rte">
                  {% if product.metafields.Moku.TaglineText != blank %}<h6>{{product.metafields.Moku.TaglineText|escape}}</h6>{% endif %}
                  {{ product.description }}
                </div>
              </div>
            {%- endif -%}
        
          {%- when 'certi_icon' -%}
             {%- if product.metafields.Moku.Certifications != blank -%}
              <div class="certificate-icon-new">
                <div class="certificate-icon-row">
                {% assign certi_icon_meta =  product.metafields.Moku.Certifications | downcase | split: '|' %}
                {% for certi_meta_title in certi_icon_meta %}
                  {% for i in (1..6) %}
                    {% capture c_title %}certi_icon_title_{{i}}{% endcapture %}
                    {% capture c_icon %}certi_icon_{{i}}{% endcapture %}
                    {% assign certi_title = block.settings[c_title] | downcase %}
                    {% assign certi_icon = block.settings[c_icon] %}
                    {% if certi_meta_title == certi_title and certi_icon != blank %}
                     <div class="certificate-icon-box">
                       {{certi_icon}}
                       <p>{{ certi_title | escape | capitalize }}</p>
                     </div>
                    {% endif %}
                  {% endfor %}	
                {% endfor %}
                </div>
              </div>
             {%- endif -%}
        
          {%- when 'ingredient_popup' -%}
            <!--Ingredients&Nutrition popup-->
            {% assign nutrition_info = product.metafields.Moku.NutritionInformation %}
            {% assign ingredient_info = product.metafields.Moku.IngredientsInformation %}
            {% if nutrition_info != blank or ingredient_info != blank  %}
              <div class="moku-product-info-modal">
                {% if ingredient_info != blank %}<label class="moku-ingredients mb-hide" for="moku-ingredients">Ingredients</label>{% endif %}
                {% if nutrition_info != blank %}<label class="moku-ingredients mb-hide" for="moku-nutrition">Nutrition</label>{% endif %}
                <label class="moku-ingredients dk-hide" for="moku-ingredients">Ingredients & Nutrition</label>
              </div>
            {% endif %}
        
          {%- when 'whats_inside' -%}        
            {% if _varietyPack %}        
              {% assign whatsInsideImg = product.metafields.Moku.whats_inside_img %}
              {% assign whatsInsideText = product.metafields.Moku.whats_inside_text %}

              {% if whatsInsideImg != blank and whatsInsideText != blank %}
                <div class="whats-inside">
                  <h3 class="whats-inside-label">What's Inside</h3>
                  <div class="whats-inside-row">
                    {% for multi_images in whatsInsideImg %} 
                    {% assign indexAt = forloop.index0 %}
                      {% for image in multi_images %} 
                        <div class="whats-inside-wrap">
                          <img 
                               src="{{ image.src }}"
                               sizes="100vw"
                               alt="{{ whatsInsideText[indexAt] | escape }}"
                               height="100"
                               width="150"
                               loading="lazy"
                               />
                          <p>{{ whatsInsideText[indexAt] }}</p>
                        </div>
                      {% endfor %}
                    {% endfor %}
                  </div>
                </div>
              {% endif %}
            {% endif %}
        
          {%- when 'custom_liquid' -%}
            {{ block.settings.custom_liquid }}
        
          {%- when 'collapsible_tab' -%}
            <div class="product__accordion accordion quick-add-hidden" {{ block.shopify_attributes }}>
              <details id="Details-{{ block.id }}-{{ section.id }}">
                <summary>
                  <div class="summary__title">
                    {% render 'icon-accordion', icon: block.settings.icon %}
                    <h2 class="h4 accordion__title">
                      {{ block.settings.heading | default: block.settings.page.title }}
                    </h2>
                  </div>
                  {% render 'icon-caret' %}
                </summary>
                <div class="accordion__content rte" id="ProductAccordion-{{ block.id }}-{{ section.id }}">
                  {{ block.settings.content }}
                  {{ block.settings.page.content }}
                </div>
              </details>
            </div>
          {%- when 'quantity_selector' -%}
            <div class="product-form__input product-form__quantity{% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_vertical_offset < 0 %} product-form__quantity-top{% endif %}" {{ block.shopify_attributes }}>
              <label class="form__label" for="Quantity-{{ section.id }}">
                {{ 'products.product.quantity.label' | t }}
              </label>

              <quantity-input class="quantity">
                <button class="quantity__button no-js-hidden" name="minus" type="button">
                  <span class="visually-hidden">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>
                  {% render 'icon-minus' %}
                </button>
                <input class="quantity__input"
                    type="number"
                    name="quantity"
                    id="Quantity-{{ section.id }}"
                    min="1"
                    value="1"
                    form="{{ product_form_id }}"
                  >
                <button class="quantity__button no-js-hidden" name="plus" type="button">
                  <span class="visually-hidden">{{ 'products.product.quantity.increase' | t: product: product.title | escape }}</span>
                  {% render 'icon-plus' %}
                </button>
              </quantity-input>
            </div>
          
          {%- when 'popup' -%}
              <modal-opener class="product-popup-modal__opener no-js-hidden quick-add-hidden" data-modal="#PopupModal-{{ block.id }}" {{ block.shopify_attributes }}>
                <button id="ProductPopup-{{ block.id }}" class="product-popup-modal__button link" type="button" aria-haspopup="dialog">{{ block.settings.text | default: block.settings.page.title }}</button>
              </modal-opener>
              <a href="{{ block.settings.page.url }}" class="product-popup-modal__button link no-js">{{ block.settings.text }}</a>
          
          {%- when 'share' -%}
            <share-button id="Share-{{ section.id }}" class="share-button quick-add-hidden" {{ block.shopify_attributes }}>
              <button class="share-button__button hidden">
                {% render 'icon-share' %}
                {{ block.settings.share_label | escape }}
              </button>
              <details id="Details-{{ block.id }}-{{ section.id }}">
                <summary class="share-button__button">
                  {% render 'icon-share' %}
                  {{ block.settings.share_label | escape }}
                </summary>
                <div id="Product-share-{{ section.id }}" class="share-button__fallback motion-reduce">
                  <div class="field">
                    <span id="ShareMessage-{{ section.id }}" class="share-button__message hidden" role="status">
                    </span>
                    <input type="text"
                          class="field__input"
                          id="url"
                          value="{{ product.selected_variant.url | default: product.url | prepend: request.origin }}"
                          placeholder="{{ 'general.share.share_url' | t }}"
                          onclick="this.select();"
                          readonly
                    >
                    <label class="field__label" for="url">{{ 'general.share.share_url' | t }}</label>
                  </div>
                  <button class="share-button__close hidden no-js-hidden">
                    {% render 'icon-close' %}
                    <span class="visually-hidden">{{ 'general.share.close' | t }}</span>
                  </button>
                  <button class="share-button__copy no-js-hidden">
                    {% render 'icon-clipboard' %}
                    <span class="visually-hidden">{{ 'general.share.copy_to_clipboard' | t }}</span>
                  </button>
                </div>
              </details>
            </share-button>
            <script src="{{ 'share.js' | asset_url }}" defer="defer"></script>
        
          {%- when 'variant_picker' -%}
            <div class="flavor-switcher-variants">
              {% comment %}{% render 'flavor-switcher-new' %}{% endcomment %}
              {%- unless product.has_only_default_variant -%}
                <div class="product-variants-list">
                {%- if block.settings.picker_type == 'button' -%}
                  <variant-radios class="no-js-hidden ProductForm__Option product-variants-new" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
                    {%- for option in product.options_with_values -%}
                        <fieldset class="js product-form__input product-variants-new">
                          {%- for value in option.values -%}{% assign lastIndex = forloop.index0 %}{%- endfor -%}
                          <legend class="form__label Product_Variants_label">{{ option.name }}: <span class="ProductForm__SelectedValue {{lastIndex}}">{{option.values[0]}}</span></legend>
                          <ul class="HorizontalList">
                            {%- for value in option.values -%}
                            <li class="HorizontalList__Item">
                              <input class="SizeSwatch__Radio" type="radio" id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                                     name="{{ option.name }}"
                                     value="{{ value | escape }}"
                                     form="{{ product_form_id }}"
                                     {% if forloop.first %}checked{% endif %}
                                     >
                              <label class="SizeSwatch" for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}">
                                {{- value -}}
                              </label>
                            </li>
                            {%- endfor -%}
                          </ul>
                        </fieldset>
                    {%- endfor -%}
                    <script type="application/json">
                      {{ product.variants | json }}
                    </script>
                  </variant-radios>
                {%- else -%}
                  <variant-selects class="no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
                    {%- for option in product.options_with_values -%}
                      <div class="product-form__input product-form__input--dropdown">
                        <label class="form__label" for="Option-{{ section.id }}-{{ forloop.index0 }}">
                          {{ option.name }}
                        </label>
                        <div class="select">
                          <select id="Option-{{ section.id }}-{{ forloop.index0 }}"
                            class="select__select"
                            name="options[{{ option.name | escape }}]"
                            form="{{ product_form_id }}"
                          >
                            {%- for value in option.values -%}
                              <option value="{{ value | escape }}" {% if option.selected_value == value %}selected="selected"{% endif %}>
                                {{ value }}
                              </option>
                            {%- endfor -%}
                          </select>
                          {% render 'icon-caret' %}
                        </div>
                      </div>
                    {%- endfor -%}

                    <script type="application/json">
                      {{ product.variants | json }}
                    </script>
                  </variant-selects>
                {%- endif -%}
                </div>
              {%- endunless -%}
            </div>
        
          {%- when 'product_acordian' -%}
        
        	{% render 'product-acordian', varietyPack: _varietyPack %}
        
        
          {%- when 'buy_buttons' -%}
            <div {{ block.shopify_attributes }}>
              
              {% if settings.ajax_cart_method == "drawer" %}
              
                <product-form-drawer class="product-form">
                  <div class="product-form__error-message-wrapper" role="alert" hidden>
                    {% render 'icon-error' %}
                    <span class="product-form__error-message"></span>
                  </div>
                  {% form 'product', product, id: product_form_id, class: 'product-form-wrap', novalidate: 'novalidate', data-type: 'add-to-cart-form' %}
                  {%- assign _vid = product.selected_or_first_available_variant.id -%}
                  <input type="hidden" name="id" class="masterVid"  value="{{ _vid }}">

                  <div class="qty-addToCart-wrapper ProductForm__QuantitySelector">
                    <div class="QuantitySelector QuantitySelector QuantitySelector--large">
                      {% comment %}<span class="QuantitySelector__Label">QTY</span>{% endcomment %}
                      <quantity-input class="QuantitySelector__Wrapper">
                        <button class="quantity__button no-js-hidden" name="minus" type="button">
                          <span class="visually-hidden">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>
                          {% render 'icon-minus' %}
                        </button>
                        <input class="quantity__input QuantitySelector__CurrentQuantity"
                               type="number"
                               name="quantity"
                               id="Quantity-{{ section.id }}"
                               min="1"
                               value="1"
                               form="{{ product_form_id }}"
                               >
                        <button class="quantity__button no-js-hidden" name="plus" type="button">
                          <span class="visually-hidden">{{ 'products.product.quantity.increase' | t: product: product.title | escape }}</span>
                          {% render 'icon-plus' %}
                        </button>
                      </quantity-input>
                    </div>
                    <button type="submit" name="add" id="productSubmitButton" class="ProductForm__AddToCart Button Button-secondary Button--full" {% if product.selected_or_first_available_variant.available == false %}disabled{% endif %}>
                      {% render 'cart-icon' %}
					  <span>
                        {%- if product.selected_or_first_available_variant.available -%}
                          {{ 'Get the deal'}}
                        {%- else -%}
                          {{ 'products.product.sold_out' | t }}
                        {%- endif -%}
                      </span>
                      <span class="btn-price-maincart">{{product.selected_or_first_available_variant.price | money}}</span>
                      <div class="loading-overlay__spinner hidden">
                        <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg"><circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle></svg>
                      </div>
                    </button>
                  </div>
                  {% endform %}
                </product-form-drawer>
              
              {% else %}
              
                <product-form class="product-form">
                  <div class="product-form__error-message-wrapper" role="alert" hidden>
                    <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-error" viewBox="0 0 13 13">
                      <circle cx="6.5" cy="6.50049" r="5.5" stroke="white" stroke-width="2"/>
                      <circle cx="6.5" cy="6.5" r="5.5" fill="#EB001B" stroke="#EB001B" stroke-width="0.7"/>
                      <path d="M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z" fill="white"/>
                      <path d="M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z" fill="white" stroke="#EB001B" stroke-width="0.7"/>
                    </svg>
                    <span class="product-form__error-message"></span>
                      </div>

                    {%- if settings.ajax_cart_method == "page" -%}
                     {% assign formClass = 'form method-cart-page'  %} 
                    {%- else -%}
                     {% assign formClass = 'form'  %} 
                    {%- endif -%}
                  
                    {%- assign _vid = product.selected_or_first_available_variant.id -%}
                    
                    {% form 'product', product, id: product_form_id, class: formClass, novalidate: 'novalidate', data-type: 'add-to-cart-form' %}
                      <input type="hidden" name="id" class="masterVid"  value="{{ _vid }}" disabled>

                      <div class="qty-addToCart-wrapper ProductForm__QuantitySelector">
                        <div class="QuantitySelector QuantitySelector QuantitySelector--large">
                          {% comment %}<span class="QuantitySelector__Label">QTY</span>{% endcomment %}
                          <quantity-input class="QuantitySelector__Wrapper">
                            <button class="quantity__button no-js-hidden" name="minus" type="button">
                              <span class="visually-hidden">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>
                              {% render 'icon-minus' %}
                            </button>
                            <input class="quantity__input QuantitySelector__CurrentQuantity"
                                   type="number"
                                   name="quantity"
                                   id="Quantity-{{ section.id }}"
                                   min="1"
                                   value="1"
                                   form="{{ product_form_id }}"
                                   >
                            <button class="quantity__button no-js-hidden" name="plus" type="button">
                              <span class="visually-hidden">{{ 'products.product.quantity.increase' | t: product: product.title | escape }}</span>
                              {% render 'icon-plus' %}
                            </button>
                          </quantity-input>
                        </div>
                        <button type="submit" name="add" id="productSubmitButton" class="ProductForm__AddToCart Button Button-secondary Button--full" {% if product.selected_or_first_available_variant.available == false %}disabled{% endif %}>
                          {% render 'cart-icon' %}
                          <span>
                            {%- if product.selected_or_first_available_variant.available -%}
                              {{ 'Get the deal'}}
                            {%- else -%}
                              {{ 'products.product.sold_out' | t }}
                            {%- endif -%}
                          </span>
                          <span class="btn-price-maincart">{{product.selected_or_first_available_variant.price | money}}</span>
                          <div class="loading-overlay__spinner hidden">
                            <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg"><circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle></svg>
                          </div>
                        </button>
                      </div>
                    {% endform %}
                </product-form>
                  
              {% endif %}
              
              {%- if section.settings.enable_sticky_add_cart -%}
              	{% render 'sticky-add-to-cart' %}
              {%- endif -%}

              {{ 'component-pickup-availability.css' | asset_url | stylesheet_tag }}

              {%- assign pick_up_availabilities = product.selected_or_first_available_variant.store_availabilities | where: 'pick_up_enabled', true -%}

              <pickup-availability class="product__pickup-availabilities no-js-hidden quick-add-hidden"
                {% if product.selected_or_first_available_variant.available and pick_up_availabilities.size > 0 %} available{% endif %}
                data-root-url="{{ routes.root_url }}"
                data-variant-id="{{ product.selected_or_first_available_variant.id }}"
                data-has-only-default-variant="{{ product.has_only_default_variant }}"
              >
                <template>
                  <pickup-availability-preview class="pickup-availability-preview">
                    {% render 'icon-unavailable' %}
                    <div class="pickup-availability-info">
                      <p class="caption-large">{{ 'products.product.pickup_availability.unavailable' | t }}</p>
                      <button class="pickup-availability-button link link--text underlined-link">{{ 'products.product.pickup_availability.refresh' | t }}</button>
                    </div>
                  </pickup-availability-preview>
                </template>
              </pickup-availability>
            </div>
                
            {% if product.metafields.Moku.Happinesstxt != blank %}
              <div class="trust-text">
                <p>{{ product.metafields.Moku.Happinesstxt | escape }}</p>
                {% if section.settings.happiness_popup_content != blank %}
                <span class="Why_Six_Bags">
                  {% render 'que-icon' %}
                  <span class="Why_Six_Bags_Popup">{{section.settings.happiness_popup_content}}</span>
                </span>
                {% endif %}
              </div>
            {% endif %}
        
            <div class="product-form__noscript-wrapper-{{ section.id }}" style="display:none !important">
              <div class="product-form__input{% if product.has_only_default_variant %} hidden{% endif %}">
                <label class="form__label" for="Variants-{{ section.id }}">{{ 'products.product.product_variants' | t }}</label>
                <div class="select">
                  <select id="Variants-{{ section.id }}" class="select__select" form="{{ product_form_id }}">
                    {%- for variant in product.variants -%}
                    {% if product.has_only_default_variant %}
                      {% assign bagPerCase = product.metafields.Moku.BagPercase %}
                    {% else %}
                      {% assign bagPerCase = variant.metafields.Moku.BagPercaseForPrice %}
                    {% endif %}
                    {% assign oneTimePricePerBag = variant.price | divided_by: bagPerCase | money %}
                    {% assign SubscriptionPricePerBag = variant.selling_plan_allocations[0].price | divided_by: bagPerCase | money %}
                    <option
                            {% if variant.id == product.variants.last.id %}selected="selected"{% endif %}
                            {% if variant.available == false %}disabled{% endif %}
                            value="{{ variant.id }}" 
                            data-price="{{ variant.price | money | strip_html }}" 
                            data-selling-price="{{ variant.selling_plan_allocations[0].price | money | strip_html }}"
                            data-bagPerCase="{{bagPerCase}}"
                            data-pricePerBagOneTime="{{oneTimePricePerBag}}"
                            data-pricePerBagSubscription="{{SubscriptionPricePerBag}}"
                            >
                      {{ variant.title }}
                      {%- if variant.available == false %} - {{ 'products.product.sold_out' | t }}{% endif %}
                                - {{ variant.price | money | strip_html }}
                    </option>
                    {%- endfor -%}
                  </select>
                  {% render 'icon-caret' %}
                </div>
              </div>
            </div>

            <script src="{{ 'pickup-availability.js' | asset_url }}" defer="defer"></script>
        
          {%- when 'rating' -%}
            {%- if product.metafields.reviews.rating.value != blank -%}
              {% liquid
               assign rating_decimal = 0
               assign decimal = product.metafields.reviews.rating.value.rating | modulo: 1
               if decimal >= 0.3 and decimal <= 0.7
                assign rating_decimal = 0.5
              elsif decimal > 0.7
                assign rating_decimal = 1
               endif
              %}
              <div class="rating" role="img" aria-label="{{ 'accessibility.star_reviews_info' | t: rating_value: product.metafields.reviews.rating.value, rating_max: product.metafields.reviews.rating.value.scale_max }}">
                <span aria-hidden="true" class="rating-star color-icon-{{ settings.accent_icons }}" style="--rating: {{ product.metafields.reviews.rating.value.rating | floor }}; --rating-max: {{ product.metafields.reviews.rating.value.scale_max }}; --rating-decimal: {{ rating_decimal }};"></span>
              </div>
              <p class="rating-text caption">
                <span aria-hidden="true">{{ product.metafields.reviews.rating.value }} / {{ product.metafields.reviews.rating.value.scale_max }}</span>
              </p>
              <p class="rating-count caption">
                <span aria-hidden="true">({{ product.metafields.reviews.rating_count }})</span>
                <span class="visually-hidden">{{ product.metafields.reviews.rating_count }} {{ "accessibility.total_reviews" | t }}</span>
              </p>
            {%- endif -%}
          {%- endcase -%}
        {%- endfor -%}
      </div>
    </div>
  </div>

  <product-modal id="ProductModal-{{ section.id }}" class="product-media-modal media-modal">
    <div class="product-media-modal__dialog" role="dialog" aria-label="{{ 'products.modal.label' | t }}" aria-modal="true" tabindex="-1">
      <button id="ModalClose-{{ section.id }}" type="button" class="product-media-modal__toggle" aria-label="{{ 'accessibility.close' | t }}">{% render 'icon-close' %}</button>

      <div class="product-media-modal__content gradient" role="document" aria-label="{{ 'products.modal.label' | t }}" tabindex="0">
        {%- liquid
          if product.selected_or_first_available_variant.featured_media != null
            assign media = product.selected_or_first_available_variant.featured_media
            render 'product-media', media: media, loop: section.settings.enable_video_looping
          endif
        -%}

        {%- for media in product.media -%}
          {%- liquid
            unless media.id == product.selected_or_first_available_variant.featured_media.id
              render 'product-media', media: media, loop: section.settings.enable_video_looping
            endunless
          -%}
        {%- endfor -%}
      </div>
    </div>
  </product-modal>

  {% assign popups = section.blocks | where: "type", "popup" %}
  {%- for block in popups -%}
    <modal-dialog id="PopupModal-{{ block.id }}" class="product-popup-modal" {{ block.shopify_attributes }}>
      <div role="dialog" aria-label="{{ block.settings.text }}" aria-modal="true" class="product-popup-modal__content" tabindex="-1">
        <button id="ModalClose-{{ block.id }}" type="button" class="product-popup-modal__toggle" aria-label="{{ 'accessibility.close' | t }}">{% render 'icon-close' %}</button>
        <div class="product-popup-modal__content-info">
          <h1 class="h2">{{ block.settings.page.title }}</h1>
          {{ block.settings.page.content }}
        </div>
      </div>
    </modal-dialog>
  {%- endfor -%}

  {%- if product.media.size > 0 -%}
    <script src="{{ 'product-modal.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'media-gallery.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}

  {%- if first_3d_model -%}
    <script type="application/json" id="ProductJSON-{{ product.id }}">
      {{ product.media | where: 'media_type', 'model' | json }}
    </script>
    <script src="{{ 'product-model.js' | asset_url }}" defer></script>
  {%- endif -%}

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      function isIE() {
        const ua = window.navigator.userAgent;
        const msie = ua.indexOf('MSIE ');
        const trident = ua.indexOf('Trident/');

        return (msie > 0 || trident > 0);
      }

      if (!isIE()) return;
      const hiddenInput = document.querySelector('#{{ product_form_id }} input[name="id"]');
      const noScriptInputWrapper = document.createElement('div');
      const variantSwitcher = document.querySelector('variant-radios[data-section="{{ section.id }}"]') || document.querySelector('variant-selects[data-section="{{ section.id }}"]');
      noScriptInputWrapper.innerHTML = document.querySelector('.product-form__noscript-wrapper-{{ section.id }}').textContent;
      variantSwitcher.outerHTML = noScriptInputWrapper.outerHTML;

      document.querySelector('#Variants-{{ section.id }}').addEventListener('change', function(event) {
        hiddenInput.value = event.currentTarget.value;
      });
    });
  </script>

  {%- liquid
    if product.selected_or_first_available_variant.featured_media
      assign seo_media = product.selected_or_first_available_variant.featured_media
    else
      assign seo_media = product.featured_media
    endif
  -%}

  <script type="application/ld+json">
    {
      "@context": "http://schema.org/",
      "@type": "Product",
      "name": {{ product.title | json }},
      "url": {{ request.origin | append: product.url | json }},
      {% if seo_media -%}
        "image": [
          {{ seo_media | image_url: width: seo_media.preview_image.width | prepend: "https:" | json }}
        ],
      {%- endif %}
      "description": {{ product.description | strip_html | json }},
      {% if product.selected_or_first_available_variant.sku != blank -%}
        "sku": {{ product.selected_or_first_available_variant.sku | json }},
      {%- endif %}
      "brand": {
        "@type": "Thing",
        "name": {{ product.vendor | json }}
      },
      "offers": [
        {%- for variant in product.variants -%}
          {
            "@type" : "Offer",
            {%- if variant.sku != blank -%}
              "sku": {{ variant.sku | json }},
            {%- endif -%}
            "availability" : "http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}",
            "price" : {{ variant.price | divided_by: 100.00 | json }},
            "priceCurrency" : {{ cart.currency.iso_code | json }},
            "url" : {{ request.origin | append: variant.url | json }}
          }{% unless forloop.last %},{% endunless %}
        {%- endfor -%}
      ]
    }
  </script>
</section>
  
  
<!--Ingredients&Nutrition popup-->
{% assign nutrition_info = product.metafields.Moku.NutritionInformation %}
{% assign ingredient_info = product.metafields.Moku.IngredientsInformation %}

{% if nutrition_info != blank or ingredient_info != blank %}
  
  {%- capture _flavor_product -%}
  {% assign flavor_product = product.metafields.Moku.Flavors | split: '|' %}
  {% if flavor_product != blank %}
      <div class="ingredients-modal-tab-head">
         {% if flavor_product != blank %}
          {% for flvr_prod in flavor_product %}
           {% assign prod = all_products[flvr_prod] %}
           <a class="ingredients-tab-link{% if forloop.first %} active{% endif %}" data-title="{{prod.title|handleize}}" href="#">{{ prod.title | escape }}</a>
           {% if prod.metafields.Moku.FlavorBackground != blank %}
            <style>.ingredients-tab-link[data-title={{prod.title|handleize}}]{ background-color:{{prod.metafields.Moku.FlavorBackground}};}</style>
           {% endif %}
          {% endfor %}
         {% endif %}
          <a class="close-icon" href="#">
            {% render 'close-icon' %}
          </a>
        </div>
      
          {% for flvr_prod in flavor_product %}
           {% assign prod = all_products[flvr_prod] %}
            <div class="ingredients-modal-body tab-body" id="{{prod.title|handleize}}" {% if forloop.first %}style="display:block;"{% endif %}>
              <div class="ingredients-body-grid">
                {% if nutrition_info != blank  %}
                {% assign nutrition_info_split = prod.metafields.Moku.NutritionInformation | split:'<h5>' %}
                <div class="ingredients-body-col left">
                  <h4>Nutrition information</h4>
                  {% assign i = nutrition_info_split.size | minus:1 %}
                  {% for arr in (1..i) %}
                  {% assign desc_2 = nutrition_info_split[arr] | split:'</h5>' %}
                  <h5>{{desc_2[0]|strip_html}}</h5>
                  <div class="ingredients-body-list">
                    {{desc_2[1]}}
                  </div>
                  {% endfor %}
                </div>
                {% endif %}
                <div class="ingredients-body-col right">
                  <h4>Ingredients</h4>
                  {% if prod.metafields.Moku.IngredientsInformation != blank  %}
                  {{ prod.metafields.Moku.IngredientsInformation }}
                  {% endif %}
                </div>
              </div>
            </div>
          {% endfor %}
  {% endif %}
  {% endcapture %}
  
  
  <div class="ingredients-modal-main{% if ingredient_info == blank %} no-ingredients{% endif %}">
    <div class="ingredients-modal-new">
       {%- if _varietyPack and _flavor_product != blank -%}
       <div class="ingredients-modal-row">{{ _flavor_product }}</div>
       {%- else -%}
        <div class="ingredients-modal-row">
          <div class="ingredients-modal-head">
            <h5>{{ product.title }}</h5>
            <a class="close-icon" href="#">
              {% render 'close-icon' %}
            </a>
          </div>
          <div class="ingredients-modal-body">
            <div class="ingredients-body-grid">
              {% if nutrition_info != blank  %}
                {% assign nutrition_info_split = nutrition_info | split:'<h5>' %}
                <div class="ingredients-body-col left">
                  <h4>Nutrition information</h4>
                  {% assign i = nutrition_info_split.size | minus:1 %}
                  {% for arr in (1..i) %}
                  {% assign desc_2 = nutrition_info_split[arr] | split:'</h5>' %}
                    <h5>{{desc_2[0]}}</h5>
                    <div class="ingredients-body-list">
                      {{desc_2[1]}}
                    </div>
                  {% endfor %}
                </div>
              {% endif %}
              {% if ingredient_info != blank  %}
                <div class="ingredients-body-col right">
                  <h4>Ingredients</h4>
                  {{ ingredient_info }}
                </div>
              {% endif %}
            </div>
        </div>
       {%- endif -%}      
    </div>
  </div>
    
{% endif %}
  
  
<style>
  {% if product.metafields.Moku.Section1color != blank %}
  .product-main-new { background-color: {{product.metafields.Moku.Section1color}}; }
  {% endif %}
  {% if product.metafields.Moku.Section2color != blank %}
  .product-experience-new, .product-reviews-new { background-color: {{product.metafields.Moku.Section2color}}; }
  {% endif %}
  {% if product.metafields.Moku.FlavorBackground != blank %}
  .flavor_switcher_new .flavor-dropdown-label, .ingredients-modal-head { background-color:{{product.metafields.Moku.FlavorBackground}};}
  .flavor_switcher_new ul { border-color: {{product.metafields.Moku.FlavorBackground}}; }
  .flavor_switcher_new li a { color: {{product.metafields.Moku.FlavorBackground}}; }
  {% endif %}
  {% if product.metafields.Moku.ReviewBackground != blank %}
  .junip-product-new { background-color: {{product.metafields.Moku.ReviewBackground}}; }
  {% endif %}
  {% if product.metafields.Moku.StarsBackground != blank %}
  .junip-product-new .junip-star svg path{ fill: {{product.metafields.Moku.StarsBackground}}; }
  {% endif %}
  {% if product.metafields.Moku.LabelColor != blank %}
  .product-main-new .pro-img-shap svg path{ fill: {{product.metafields.Moku.LabelColor}}; }
  .announcement-bar[aria-label="Announcement"]{ background-color: {{product.metafields.Moku.LabelColor}}; }
  .product-experience-new .experience-new-list h4 { background: {{product.metafields.Moku.LabelColor}}; }
  .product-main-new .ProductForm__AddToCart { background-color: {{product.metafields.Moku.LabelColor}}; }
  {% endif %}
  {%- if product.metafields.Moku.HappinessColor != blank -%}
  .product-main-new .trust-text {color: {{product.metafields.Moku.HappinessColor}};}
  {%- endif -%}
</style>
  
  

  
{% schema %}
{
  "name": "t:sections.main-product.name",
  "tag": "section",
  "class": "section product-section-new main-product-new default-pdp vegnew-pdp",
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "text",
      "name": "t:sections.main-product.blocks.text.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Text block",
          "label": "t:sections.main-product.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.text.settings.text_style.label"
        }
      ]
    },
    {
      "type": "title",
      "name": "t:sections.main-product.blocks.title.name",
      "limit": 1
    },
    {
      "type": "price",
      "name": "t:sections.main-product.blocks.price.name",
      "limit": 1
    },
    {
      "type": "quantity_selector",
      "name": "t:sections.main-product.blocks.quantity_selector.name",
      "limit": 1
    },
    {
      "type": "variant_picker",
      "name": "t:sections.main-product.blocks.variant_picker.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "picker_type",
          "options": [
            {
              "value": "dropdown",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__1.label"
            },
            {
              "value": "button",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__2.label"
            }
          ],
          "default": "button",
          "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.label"
        }
      ]
    },
    {
      "type": "buy_buttons",
      "name": "t:sections.main-product.blocks.buy_buttons.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_dynamic_checkout",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.info"
        }
      ]
    },
    {
      "type": "description",
      "name": "t:sections.main-product.blocks.description.name",
      "limit": 1
    },
    {
      "type": "certi_icon",
      "name": "Certificate icon",
      "limit": 1,
  	  "settings":[
        {
         "type": "paragraph",
         "content": "Only those icon will be displayed which are selected in product metafield and will be match below icon title"
        },
        {
         "type": "header",
         "content": "Icon 1"
        },
        {
         "type": "html",
         "id": "certi_icon_1",
         "label": "Certificate icon SVG"
        },
        {
         "type": "text",
         "id": "certi_icon_title_1",
         "label": "Certificate icon name"
        },
        {
         "type": "header",
         "content": "Icon 2"
        },
        {
         "type": "html",
         "id": "certi_icon_2",
         "label": "Certificate icon SVG"
        },
        {
         "type": "text",
         "id": "certi_icon_title_2",
         "label": "Certificate icon name"
        },
        {
         "type": "header",
         "content": "Icon 3"
        },
        {
         "type": "html",
         "id": "certi_icon_3",
         "label": "Certificate icon SVG"
        },
        {
         "type": "text",
         "id": "certi_icon_title_3",
         "label": "Certificate icon name"
        },
        {
         "type": "header",
         "content": "Icon 4"
        },
        {
         "type": "html",
         "id": "certi_icon_4",
         "label": "Certificate icon SVG"
        },
        {
         "type": "text",
         "id": "certi_icon_title_4",
         "label": "Certificate icon name"
        },
        {
         "type": "header",
         "content": "Icon 5"
        },
        {
         "type": "html",
         "id": "certi_icon_5",
         "label": "Certificate icon SVG"
        },
        {
         "type": "text",
         "id": "certi_icon_title_5",
         "label": "Certificate icon name"
        },
        {
         "type": "header",
         "content": "Icon 6"
        },
        {
         "type": "html",
         "id": "certi_icon_6",
         "label": "Certificate icon SVG"
        },
        {
         "type": "text",
         "id": "certi_icon_title_6",
         "label": "Certificate icon name"
        }
	  ]
    },
    {
      "type": "ingredient_popup",
      "name": "Ingredients & Nutrition",
      "limit": 1
    },
    {
      "type": "whats_inside",
      "name": "What's inside",
      "limit": 1
    },
    {
      "type": "product_acordian",
      "name": "Product acordian",
      "limit": 1
    },
    {
      "type": "share",
      "name": "t:sections.main-product.blocks.share.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "share_label",
          "label": "t:sections.main-product.blocks.share.settings.text.label",
          "default": "Share"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.featured_image_info.content"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.title_info.content"
        }
      ]
    },
    {
      "type": "custom_liquid",
      "name": "t:sections.main-product.blocks.custom_liquid.name",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "t:sections.main-product.blocks.custom_liquid.settings.custom_liquid.label",
          "info": "t:sections.main-product.blocks.custom_liquid.settings.custom_liquid.info"
        }
      ]
    },
    {
      "type": "collapsible_tab",
      "name": "t:sections.main-product.blocks.collapsible_tab.name",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "Collapsible row",
          "info": "t:sections.main-product.blocks.collapsible_tab.settings.heading.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.heading.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "check_mark",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.content.label"
        },
        {
          "type": "page",
          "id": "page",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.page.label"
        }
      ]
    },
    {
      "type": "popup",
      "name": "t:sections.main-product.blocks.popup.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Pop-up link text",
          "label": "t:sections.main-product.blocks.popup.settings.link_label.label"
        },
        {
          "id": "page",
          "type": "page",
          "label": "t:sections.main-product.blocks.popup.settings.page.label"
        }
      ]
    },
    {
      "type": "rating",
      "name": "t:sections.main-product.blocks.rating.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.rating.settings.paragraph.content"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_sticky_info",
      "default": true,
      "label": "t:sections.main-product.settings.enable_sticky_info.label"
    },
    {
      "type": "checkbox",
      "id": "enable_sticky_add_cart",
      "default": true,
      "label": "Enable sticky add to cart"
    },
    {
      "type": "header",
      "content": "t:sections.main-product.settings.header.content",
      "info": "t:sections.main-product.settings.header.info"
    },
    {
      "type": "select",
      "id": "media_size",
      "options": [
        {
          "value": "small",
          "label": "t:sections.main-product.settings.media_size.options__1.label"
        },
        {
          "value": "medium",
          "label": "t:sections.main-product.settings.media_size.options__2.label"
        },
        {
          "value": "large",
          "label": "t:sections.main-product.settings.media_size.options__3.label"
        }
      ],
      "default": "large",
      "label": "t:sections.main-product.settings.media_size.label",
      "info": "t:sections.main-product.settings.media_size.info"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "default": false,
      "label": "t:sections.main-product.settings.enable_video_looping.label"
    },
    {
      "type": "header",
      "content": "Happiness popup content"
    },
    {
     "type": "richtext",
     "id": "happiness_popup_content",
     "label": "Popup content"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    },
    {
      "type": "header",
      "content": "Main image certificate icon"
    },
    {
      "type": "html",
      "id": "mian_certi_icon_1",
      "label": "Certificate icon 1 SVG"
    },
    {
      "type": "text",
      "id": "mian_certi_icon_title_1",
      "label": "Certificate icon 1 title"
    },
    {
      "type": "html",
      "id": "mian_certi_icon_2",
      "label": "Certificate icon 2 SVG"
    },
    {
      "type": "text",
      "id": "mian_certi_icon_title_2",
      "label": "Certificate icon 2 title"
    },
    {
      "type": "html",
      "id": "mian_certi_icon_3",
      "label": "Certificate icon 3 SVG"
    },
    {
      "type": "text",
      "id": "mian_certi_icon_title_3",
      "label": "Certificate icon 3 title"
    }
  ]
}
{% endschema %}
